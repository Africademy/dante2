(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./src/character_convert_mapping.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),r=a("./node_modules/@mdx-js/tag/dist/index.js"),p=a("./node_modules/docz/dist/index.m.js"),s=a("./src/site/data/poc.js"),c=a("./src/editor/components/Dante/Dante.js"),m=a("./node_modules/react-powerplug/dist/react-powerplug.esm.js");function i(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components,a=i(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"continuous-blocks"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#continuous-blocks"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Continuous Blocks"),o.a.createElement(r.MDXTag,{name:"p",components:n},'This option provides some mapping on character combination on the beggining of pharagraph. For example you may want to create some ordered list just by typing "1." The following are some default character mappings:'),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"defaults-are-"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#defaults-are-"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Defaults are :"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre"},"  character_convert_mapping: {\n    '> ': \"blockquote\",\n    '*.': \"unordered-list-item\",\n    '* ': \"unordered-list-item\",\n    '- ': \"unordered-list-item\",\n    '1.': \"ordered-list-item\",\n    '# ': 'header-one',\n    '##': 'header-two',\n    '==': \"unstyled\",\n    '` ': \"code-block\"\n  }\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"implement-defaults"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#implement-defaults"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Implement defaults"),o.a.createElement(p.d,{__position:0,__code:"<Dante\n  character_convert_mapping={{\n    '* ': 'blockquote',\n    '##': 'header-two',\n  }}\n/>",__scope:{props:a,h1:s.e,Dante:c.a,State:m.a,Toggle:m.b}},o.a.createElement(c.a,{character_convert_mapping:{"* ":"blockquote","##":"header-two"}})))}}}]);